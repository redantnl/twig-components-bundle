{% spaceless %}
    {% if global is same as(false) %}
        {% set functionCall = 'render_component("' ~ component ~ '", ' %}
    {% elseif global is empty %}
        {% set functionCall = component %}
    {% else %}
        {% set functionCall = global ~ '.' ~ component %}
    {% endif %}

    {% set template = "{{ " ~ functionCall ~ "({ " ~ "\n" %}
    {%- for property in definition if property.required or property.preview %}
        {% set template = template ~ "    " ~ property.name ~ ': ' ~ property.getPreview(true) ~ ',' ~ "\n" %}
    {% endfor -%}
    {% set template = template|slice(0, -2) ~ "\n" ~ '}) }}' %}

    {% set noTemplate = false %}
    {% set outputTemplate = "{{ render_component('" ~ component ~ "', { " ~ "\n" %}
    {%- for property in definition if property.required or property.preview %}
        {% set outputTemplate = outputTemplate ~ "    " ~ property.name ~ ': ' ~ property.preview(true) ~ ',' ~ "\n" %}
        {% if property.required and '\\' in property.type %}{% set noTemplate = true %}{% endif %}
    {% endfor -%}
    {% set outputTemplate = outputTemplate|slice(0, -2) ~ "\n" ~'}) }}' %}

    {% if noTemplate %}{% set outputTemplate = 'Preview cannot be generated' %}{% endif %}
{% endspaceless %}
# {{ component|replace({'.': ' '})|title }}

{% if short_description %}**{{ short_description }}**
{% endif %}
{% if comment %}
{{ comment }}
{% endif %}

## Properties

The {{ component|replace({'.': ' '})|title }} component defines the following properties. Required properties are marked with *.

Property | Type | Default value | Comment
:--- | :--- | :--- | :---
{% for property in definition %}
{{ property.name }}{% if property.required %}*****{% endif %} | `{{ property.type }}` | {% if property.defaultValue is iterable %}`[{% if property.defaultValue|length > 0 %} '{{ property.defaultValue|join("', '") }}' {% endif %}]`{% elseif property.defaultValue is same as (false) or property.defaultValue is not empty %}`{% if property.type == 'bool' %}{{ property.defaultValue ? 'true' : 'false' }}{% else %}{{ property.defaultValue }}{% endif %}`{% endif %} | {{ property.comment }}
{% endfor %}

## Usage

```twig
{{ template|raw }}
```

{% if global is not same as(false) %}
Alternatively, in _any_ Twig environment, you can always use the `render_component("{{ component }}", {})` function.</p>
{% endif %}

## Example output

```html
{{ include(template_from_string(outputTemplate))|trim|raw }}
```

!> Output may greatly differ based on the specified options.